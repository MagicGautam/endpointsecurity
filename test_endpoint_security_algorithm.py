# -*- coding: utf-8 -*-
"""Test Endpoint Security Algorithm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17--nyTYngl5p2A1UNKEF3YfVQVe_2sxX
"""

import requests

import os
import hashlib
import requests


def calculate_sha256(filename):
    sha256 = hashlib.sha256()
    with open(filename, "rb") as f:
        for chunk in iter(lambda: f.read(4096), b""):
            sha256.update(chunk)
    return sha256.hexdigest()


def is_malware(filename):
    # Replace with your VirusTotal API key

    api_key = "CONFIDENTIAL"

    # Replace with the file_id for the file you want to get information for
    hash=calculate_sha256(filename)
    file_id = hash
    print(file_id)

    api_url = f"https://www.virustotal.com/api/v3/files/{file_id}"
    api_headers = {
            "x-apikey": api_key
        }
    api_response = requests.get(api_url, headers=api_headers)

    # Check if the API request was successful
    if api_response.status_code == 200:
        # Get the response data in JSON format
        response_data = api_response.json()

        # Access the desired information from the response data
        file_name = response_data["data"]["attributes"]["names"]
        last_analysis_date = response_data["data"]["attributes"]["last_analysis_date"]
        malicious = response_data["data"]["attributes"]["last_analysis_stats"]["malicious"]

        # Print the extracted information
        print(f"File Name: {file_name}")
        print(f"Last Analysis Date: {last_analysis_date}")
        print(f"Malicious: {malicious}")
        return malicious
    else:
        # Print the error message if the API request was unsuccessful
        print(f"Error: {api_response.text}") 


def scan_directory(directory):
    for root, dirs, files in os.walk(directory):
        for file in files:
            file_path = os.path.join(root, file)
            if is_malware(file_path):
                print(f"Malware detected: {file_path}")
            else:
                print(f"No malware detected: {file_path}")

scan_directory("/content/test")